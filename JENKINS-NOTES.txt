DAY-10              DATE:5-2-2025                                      



                *continuous integration*


IMPORTANCE OF CONTINUOUS INTEGRATION:-
  1) Improve quality:- 
          Improves the quality by running multiply unit test and analysing various static codes.

  2) Increases productivity:-
          Automating build of code saves a lot of time, there by increasing productivity.

  3) Reduces risk:-
          Eliminating the risk of potential human errors by automating test.



INTRODUCTION TO JENKINS:-

   -> Easy installation process 
   -> provides advance security 
   -> optimized performance
   -> upgrades are easy available
   -> light weight container support
   -> distributed team management


WHAT IS CONTINUOUS INTEGRATION:-
     It is the process of automating the building and testing of code, each time one of the team member commit changes to version control.
continuous integration, continuous delivery (or) deployment but delivery is also known as release, then first stage is CI, second stage is CD, 
and third stage is placing the artifact in the web server.

POPULAR CONTINUOUS INTEGRATION TOOLS:-

    -> Gitlab CI
    -> Code ship
    -> Bamboo
    -> Jenkins
    -> Team city
    -> Travis CI

   From the AWS cloud if we want to perform CICD, there are various services like code commit, code deploy and code guru, AWS code build, AWS pipeline.


IN AZURE CLOUD :-
    Azure devops, Azure boards, Azure repos, Azure pipeline, Azure test plans, Azure Artifact.


WHAT IS JENKINS?
       A continuous integration server which manages and control processes such as plain, code, build, test, deploy, operate and monitor in devops environment.


WHY JENKINS IS SO POPULAR?
   -> Open source
   -> Good plugins support
   -> Good community support 
   -> Fast and reliable
   -> Good OS support
   -> scripted builds


TOPICS:-

  -> Jenkins Architecture
  -> Plugin management in Jenkins
  -> Jenkins security management
  -> notification in Jenkins
  -> Jenkins master slave architecture
  -> Jenkins delivery pipeline
  -> Jenkins declarative pipeline

JENKINS ARCHITECTURE: SOURCE CONTROL MANAGEMENT
 
 * Jenkins Architecture: Source control management
 
                  git --→ Jenkins                                         
<<<<<<< HEAD
                                                                         
                            ^                            
                            ^                                             | → Test Environment
|                                                  |    |Is branch test,  |
| | Build+unitTest | → |Function Test| → |Deploy|  |    |release          | → Release Evironment
|                                                  |    |     (or)        |
                                                        | production      | → Production Environment
                                                                        
=======
                            |                                             
                            |                                              → Test Environment
|                                                                       |    |Is branch test,|  
| | Build+unitTest | → |Function Test| → |Deploy|  |    |release        |   → Release Evironment
|                                                           (or)      
                                                        | production    |   → Production Environment
                                                        
>>>>>>> b4e10ec3a959acaec4d89d4f04e80a4fa9ebbfa7

PLUGIN MANAGEMENT IN JENKINS :~
 
 
              UPDATE -->shows update to already installed
 
              AVAILABLE -->show plugins that are available for installation
=>TABS
              INSTALLED -->display plugins installed that have no updates
 
              ADVANCED -->lists configuration of http proxy allows manual upload of plugin and url plugin site
 
 
In real time we cant install the plugins as simple as simple as that reasons being they meights be challanges
  with proxy settings as well as vpn (virtual private networking) in order to avoide we should configure HHTP 
  proxy in jenkins plugin of advance tab.
 
 

  HOW TO INSTALL JENKINS ON WINDOES:~
 
* using docker 
* using kubernets
* war files
* offline installation
* other servlet containers
 
 
      PREREQUISITES:~
 
 
* minimum hardware requirements
 
  * 256 MB of RAM 
  * 1 GB of drive space although 10GB is a recommand minimum it running the jenkins as a docker container.
 
 
* Recommended hardware configuration for a small team:
  * 4GB + of RAM
  * 50GB + drive space
  comrechensive hardware recommendations.
 
 
* Jankins tools is developed on java code
 
 
            PREREQUISITES:~
 
* A system running windoes 10
 
* The latest copy of java development kit or java runtime enviranment installed.
 
* Access to an account with admainistrator privillages.



INSTALL JENKINS ON WINDOWS
   
   -> Browse to the official Jenkins download page. Under the "downloading Jenkins" section is a list of installers for the long-term support (LTS) version of Jenkins.
    Click the Windows link to begin the download.
       * URL will be Jenkins.in/download/

   -> Once you click on "download windows" text, it will open a new tab saying "Thank you for downloading" and the download will start.

   -> After downloading, go to the downloads folder and double-click on the Jenkins file, which is of type "Windows installer package".

   -> The setup wizard starts. Click "Next" to proceed.

   -> Select the install destination folder and click "Next" to continue.

   -> Under the "Run service as a local or domain user" option, enter the domain username and password for the user account you want to run Jenkins with. 
        Click "Test credentials" to verify the login data, then click "Next" to proceed.
         * Select the first option: "Run service as LocalSystem"

   -> Enter the port number you want Jenkins to run on. Click "Test port" to check if the selected port is available, then click "Next" to continue.
         * Default port of Jenkins is 8080

   -> Select the directory where Java is installed on your system and click "Next" to proceed.

   -> Select the features you want to install with Jenkins and click "Next" to continue.

   -> Click "Install" to start the installation process.



    ## After completion of the installation process, you have to unblock Jenkins before you can customize and start using it.localhost: 8080 , 127.0.0.1:8080.

    1) In your web browser, navigate to the port number you selected during the installation using the following address:
           http://localhost:[port number]
               127.0.0.1:8080

    2) Navigate to the location on your system specified by the "Unlock Jenkins" page.
            & Please copy the password
          C:\ProgramData\Jenkins.jenkins\secrets\initialAdminPassword

         Where "initial Admin Password" is a file.

            In order to read the data of that file, use the "cat" command.
              At the command prompt:
          "cat C:\ProgramData\Jenkins.jenkins\secrets\initialAdminPassword"

    3) Copy the password from the "initial Admin Password" file.

    4) Paste the password in the "Administrator password" field on the "Unlock Jenkins" page and click "Continue" to proceed.


       CUSTOMER JENKINS:

   * Click the "Install suggested plugins" button to have Jenkins automatically install the most frequently used plugins.

   * After Jenkins finishes installing the plugins, enter the required information on the "Create First Admin User" page. Click "Save and Continue" to proceed.

   * User name: [Enter username]

   * Password: [Enter password]

   * Confirm password: [Confirm password]

   * Full name: [Enter full name]

   * E-mail address: [Enter email address]
                                                                                                                          [Save & Continue button]

  * click "Save and Finish".


      How to stop Jenkins:

   -> Go to the "Services" in Windows.
   -> Select (or search for) "J".
   -> In the left side, you will see the "Stop" option.

         How to restart Jenkins:

  -> One way is a safe restart. Go to the URL of Jenkins:
        http://localhost:8080/safeRestart
  -> Jenkins will try to pause jobs and restart once all running jobs are either finished or paused.


         Jenkins is restarting banner:

       This will be displayed on most Jenkins pages. You can use it to let users know what is happening. 
       A default message will be added if you don't supply one.

=====================================================

DAY-11           DATE:6-2-2025


             PLUGIN INSTALLATION:~

 THERE ARE 2 WAYS TO UNSTALL THE PLUGINS

 1> Automatically

 2> manually

 1>AUTOMAICALLY :> once we login to jenkins GUI left side you will be seen the option of manage jenkins click on manage
                   jenkins  we have system configuration

 ==>> click on plugins go to available plugins

 ==>> search for the plugin which is required 

 ==>> select the plugin under the list one you select the plugin install button  will be highlighted them click on install button

 2>MANUALLY :> under plugins tab go to available plugin and search for ansible plugin and click on the plugin which is required
               once you click on the plugin new	 tab will be open the click on the release, under release we will see the various
               version of the specific go for the plugin which is required the specific version under the installation option we 
               can see the direct link option we have to click on the direct link plugin will get downloaded to under local machine



Plugins definition:-
 
           Where we can add, remove, disable or Enable plugins that can Extend the functionality of Jenkins.
 
           → When we install the plugin in automatic way plugins Extention is JPI (Jenkins plugin) when Extention.
 
           we install the plugin in manually way plugin Extention is HPI (hudson plugin)
 
How to uninstall the plugins:-
 
          Manage Jenkins → plugins → Install plugins
 
          → Search Plugin name which we wanted to uninstall select the plugin and then uninstall button will be high lighted once clicked on uninstall,
              plugin will get uninstall.
 
How to update the plugins
 
           Manage Jenkins → plugins → updates
 
           → Select the plugin and then update button will be highlighted once clicked on update, plugin will get update.
 
Here's how to get this into a Word document:
          * Copy the text above.
 
          * Open a new Microsoft Word document.
 
          * Paste the copied text into the document. (You can use Ctrl+V or right-click and select "Paste")
 
          * Format the text as needed within Word. You can adjust font, spacing, add bullet points, etc.
 
          * Save the document. Choose a location and file name, and save it as a .doc or .docx file.
 
   → Select the plugin and then update button will be highlighted once clicked on update, plugin will get update.
   → In Real time we should not update the plugins directly, Reason being there may be the challenges Encountered. 
      It will be recommended to plugins in our local machines where other team members will not effected. If any thing goes wrong.
 
How to create the users?
 
     Manage Jenkins → Security → Users (Create/Delete/modify users that can log in to this Jenkins.)
 
   → Click on the users we can see the create user option after clicking on the user option we can see the username, password, confirm password,
       full name, Email address then click on create user.
 
How to give permission to users:-
 
    Manage Jenkins → Security (Secure Jenkins; define who is allowed access/use the system)
 
    → Best click on that there we can see Authorization under that you will see add user button, after click on that button we will get user id after giving
      user id then click on "Ok" button, after that we have to see user is added then we have to give required permission to the user by checking the box 
       (The minimum access is to give over all read)
 
    → By Default what ever we create users for Jenkins will get stored in Jenkins' own users data base.
 
    → This is suitable for smaller setup where you have no Existing user data base elsewhere. Other option is LDAP (Lightweight directory Access protocol)
 
Authorization Strategy:-
 
       By default we will see project based authorization matrix with these we can manage the authorization based on the options available under strategy.
 
             Example: Credentials, Agent, Job, Run, Etc...
Matrix authorization strategy:-
 
          Matrix Authorization allows configuring the lowest level Permissions, such as starting new builds, configuring items, or deleting them individually.
has context menu



 JENKINS PROJECT (PROJECT (OR) JOB BOTH ARE SAME)

  IT IS A COMBINATION OF ONE OR MORE TASKS

 ==>FREE STYLE PROJECT:~

    classic ,general-purpose job type that checkes out from one scm,executes build steps serially followed by post -build steps like archiving 
    artifacts and sening email notifications.

 ==>MAVEN PROJECT:~

    Build a maven project, jenkins takes advantages of your pom file and drastically reduces the configuration 

 ==>PIPELINE:~ 

    Orchestrates long-running activities that can span multiple build agents. Suitable for building
    pipelines (formerly known as workflows) and/or organizing complex activities that do not easily
    fit in free-style job type.

 ==>MULTI-CONFIGURATION PROJECT:~

    Suitable for projects that need a large number of different configurations, such as testing on
    multiple environments, platform-specific builds, etc.

 ==>FOLDER:~

    Creates a container that stores nested items in it. Useful for grouping things together. Unlike
    view, which is just a filter, a folder creates a separate namespace, so you can have multiple things


 ==>MULTI BRANCH PIPELINE:~

    Creates a set of Pipeline projects according to detected branches in one SCM repository.


 ==>ORGANIZATION FOLDER:~

    Creates a set of multibranch project subfolders by scanning for repositories.



        HOW TO CREATE THE JOB OR PROJECT :~

  In jenkins GUI will see the "+ new items" click on that new item the item name then select the item type once select any of the item
  click on "ok" button which is highlighted
 
 ==>> job configuration is conists of general (where we cangive information or discription about the project)

 ==>> source code management where we will be passing url of the repositories

 ==>> build triggers (in what way we wanted to trigger or build the job)

 ==>> build environment

 ==>> build steps (where we can add tasks)

 ==>> post-build actions


      HOW TO GET A FREE STYLE LEARNING JOB:~

 ==>> NEW ITEM (GIVE THE JOB NAME)

 ==>> select an item then click on "ok"

 ==>> go to the build steps configuration of jbos click on build steps dropdown and select execute windows batch command

 ==>> and just type "dir" and click on save 

 ==>> and click on build now option in the leftside and we can check there console output



                        BLUE OCEAN:~

   WHAT IS BLUE OCEAN ?

 * blue ocean rethinks the jenkins user experiences designed from the ground up for jenkins pipeline and comatible with freestyle jobs 

      




      
 

